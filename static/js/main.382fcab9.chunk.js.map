{"version":3,"sources":["components/Peach.tsx","components/ProductsMaster.tsx","components/Categories.tsx","components/Blogs.tsx","components/News.tsx","components/Sales.tsx","components/AddProductsCategories.tsx","components/AddProducts.tsx","components/ShipmentSettingsVFC.tsx","components/Shipment.tsx","components/OrderSort.tsx","components/Orders.tsx","components/Customers.tsx","components/Navi.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Peach","useState","active","setActive","toggleBaner","useCallback","bannerMarkup","Layout","Section","fullWidth","Banner","title","status","action","content","onDismiss","TextContainer","ProductsMaster","secondary","Card","Form","onSubmit","FormLayout","TopBar","SearchField","value","onChange","placeholder","onCancel","Categories","categoriesItem","id","name","num","ResourceList","items","renderItem","Stack","Item","fill","TextField","label","maxLength","showCharacterCount","Button","submit","primary","item","ResourceItem","onClick","TextStyle","variation","Badge","Contents","blogs","date","show","useIndexResourceState","selectedResources","allResourcesSelected","handleSelectionChange","rowMarkupII","map","index","IndexTable","Row","selected","includes","position","Cell","resourceName","singular","plural","itemCount","length","selectedItemsCount","onSelectionChange","headings","News","news","start","end","primaryFooterAction","icon","MobilePlusMajor","Header","actions","url","multiline","Salse","selectedItems","setSelectedItems","author","selectable","authorMarkup","accessibilityLabel","AddProductCategories","deselectedOptions","selectedOptions","setSelectedOptions","inputValue","setInputValue","options","setOptions","updateText","filterRegex","RegExp","resultOptions","filter","option","match","removeTag","tag","splice","indexOf","tagsMarkup","tagLabel","replace","toLowerCase","split","word","toUpperCase","join","Tag","onRemove","textField","Autocomplete","allowMultiple","onSelect","listTitle","AddProducts","secondaryFooterActions","SaveMinor","ViewMinor","destructive","DeleteMinor","helpText","DropZone","FileUpload","Group","type","max","prefix","align","ChoiceList","choices","ShipmentSettings","props","setValue","SomeArea","setSomeArea","Honshu","setHonshu","handleChange","_checked","newValue","ShipmentCompany","vertical","RadioButton","checked","disabled","Shipment","EditMinor","ResetMinor","monochrome","outline","ShipmentSettingsVFC","OrderSort","month","year","setDate","Date","selectedDates","setSelectedDates","handleMonthChange","DatePicker","onMonthChange","allowRange","condensed","Orders","numberOfSales","quantity","profit","rows","DataTable","columnContentTypes","totals","reduce","a","b","showTotalsInFooter","Customers","promotedBulkActions","onAction","console","log","bulkActions","location","media","Avatar","customer","size","Navi","flag","setFlag","handleflag","newflag","PageTitle","DisplayText","NaviContents","Navigation","HomeMajor","ProductsMajor","badge","CategoriesMajor","OrdersMajor","CustomersMajor","FeaturedContentMajor","ShipmentMajor","SettingsMajor","rollup","after","view","hide","activePath","separator","StoreMajor","Page","Frame","navigation","App","AppProvider","i18n","jaTranslations","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.382fcab9.chunk.js","sourcesContent":["import { Banner, Layout, TextContainer } from \"@shopify/polaris\";\nimport { useCallback, useState } from \"react\";\n\nexport default function Peach(){\n    const [active,setActive]=useState(true);\n    const toggleBaner=useCallback(()=>setActive((active)=>!active),[]);\n    const bannerMarkup=active?(\n        <Layout.Section fullWidth>\n            <Banner\n                title=\"TITLE PEACH\"\n                status=\"success\"\n                action={{content: 'Print label'}}\n                onDismiss={toggleBaner}\n            >\n                <TextContainer> peach peach peach peach</TextContainer>\n            </Banner>\n        </Layout.Section>\n    ):null;\n    return(\n        <>\n        {bannerMarkup}\n        </>\n\n    );\n};","import { Card, Form, FormLayout,  Layout, TopBar, } from \"@shopify/polaris\";\nimport {  } from '@shopify/polaris-icons';\nexport default function ProductsMaster(){\n    return(\n        <>\n        <Layout.Section secondary>\n            <Card title=\"Search\">\n                <Card.Section title=\"Product Search\">\n                <Form onSubmit={()=>{}}>\n                    <FormLayout>\n                        <TopBar.SearchField\n                            value=\"sample\"\n                            onChange={()=>{}}\n                            placeholder=\"Search\"\n                            onCancel={()=>{}}\n                            \n                        />\n                    </FormLayout>\n                </Form>\n                </Card.Section>\n                <Card.Section title=\"Results\"></Card.Section>\n            </Card>\n        </Layout.Section>\n        </>\n    );\n};","import { Badge, Card, FormLayout, Layout,  ResourceList, ResourceItem, TextField, TextStyle, Stack, Form, Button} from \"@shopify/polaris\";\n/*めも\nクリック\n編集モード\nソート\n商品一覧\n*/\nexport default function Categories(){\n    type categoryitem={\n        id:string,\n        name:string,\n        num:number,\n    };\n    const categoriesItem=[\n        {\n            id:'1',\n            name:'pink',\n            num:1,\n        },\n        {\n            id:'2',\n            name:'orange',\n            num:5,\n        },\n        {\n            id:'3',\n            name:'black',\n            num:2,\n            \n        },\n        {\n            id:'4',\n            name:'summer',\n            num:2,\n        },\n        {\n            id:'5',\n            name:'home',\n            num:5,\n        },\n    ];\n    \n    return(\n    <>\n        <Layout.Section >\n            <Card title=\"Categories\">\n                <Card.Section>\n                    <ResourceList\n                        items={categoriesItem}\n                        renderItem={renderItem}\n                        //selectedItems={}\n                        />\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n        <Layout.Section secondary>\n            <Card>\n                <Card.Section title=\"Category Add\">\n                    <Form onSubmit={()=>{}}>\n                        <FormLayout>\n                            <Stack>\n                                <Stack.Item fill>\n                                    <TextField\n                                        label=\"\"\n                                        value=\"sample\"\n                                        onChange={()=>{}}\n                                        placeholder=\"Category\"\n                                        maxLength={20}\n                                        showCharacterCount\n                                    />\n                                </Stack.Item>\n                                <Stack.Item>\n                                    <Button submit primary>ADD</Button>\n                                </Stack.Item>\n                            </Stack>\n                        </FormLayout>\n                    </Form>\n                </Card.Section>\n            </Card>\n            <Card>\n                <Card.Section title=\"Category search\">\n                    <FormLayout>\n                        <TextField\n                            label=\"\"\n                            value=\"sample\"\n                            onChange={()=>{}}\n                            placeholder=\"Category\"\n                            \n                        />\n                    </FormLayout>\n                </Card.Section>\n                <Card.Section>\n                    <ResourceList\n                        items={categoriesItem}\n                        renderItem={renderItem}\n                        //selectedItems={}\n                        />\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n    </>\n    );\n    function renderItem(item:categoryitem){\n        const {id,name,num}=item;\n        return(\n            <ResourceItem\n                id={id}\n                name={name}\n                onClick={()=>{}}\n            >\n                <Stack>\n                    <Stack.Item fill>\n                        <TextStyle variation=\"strong\">{name}</TextStyle>\n                    </Stack.Item>\n                    <Stack.Item>\n                        <Badge status=\"info\">{id}</Badge>\n                    </Stack.Item>\n                    <Stack.Item>\n                        {num}\n                    </Stack.Item>\n                </Stack>\n            </ResourceItem>\n        )\n    }\n};","import { Card, IndexTable, Layout,TextStyle,useIndexResourceState} from \"@shopify/polaris\";\n//news blog mail magazine sale\n//sort\nexport default function Contents(){\n    type blogType={\n        date:number,\n        title:string,\n        id:string,\n        show:boolean,\n    };\n    const blogs:blogType[]=[\n        {\n            date: 20210101,\n            title:'Sample title',\n            id:'1',\n            show:true,\n        },\n        {\n            date: 20210102,\n            title:'Sample title 2',\n            id: '2',\n            show:false,\n        },\n        {\n            date: 20210101,\n            title:'Sample title 3',\n            id:'3',\n            show:false,\n        },\n        {\n            date: 20210102,\n            title:'Sample title 4',\n            id: '4',\n            show:false,\n        },\n    ];\n        const resourceName = {\n            singular: 'article',\n            plural: 'artciles',\n        };\n    \n        const {\n        selectedResources,\n        allResourcesSelected,\n        handleSelectionChange,\n        } = useIndexResourceState(blogs);\n    \n        const rowMarkupII = blogs.map(\n            ({id, title,date, show}, index) => (\n                <IndexTable.Row\n                    id={id}\n                    key={id}\n                    selected={selectedResources.includes(id)}\n                    position={index}\n                >\n                    \n                    <IndexTable.Cell>\n                        <TextStyle variation=\"strong\">{title}</TextStyle>\n                        </IndexTable.Cell>\n                    <IndexTable.Cell>{date}</IndexTable.Cell>\n                    <IndexTable.Cell>{show?'show':'hide'}</IndexTable.Cell>\n                </IndexTable.Row>\n            ),\n            );\n    \n        return (\n            <Layout.Section>\n            <Card title=\"Blog\">\n                \n                <Card.Section >\n\n                <IndexTable\n                    resourceName={resourceName}\n                    itemCount={blogs.length}\n                    selectedItemsCount={\n                        allResourcesSelected ? 'All' : selectedResources.length\n                    }\n                    onSelectionChange={handleSelectionChange}\n                    headings={[\n                        {title: 'Title'},\n                        {title: 'Date'},\n                        {title: 'Show'},\n                    ]}\n                >\n                    {rowMarkupII}\n                </IndexTable>\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n        );\n}","import { Card, IndexTable, Layout,TextStyle,useIndexResourceState,TextField} from \"@shopify/polaris\";\nimport {\n    MobilePlusMajor\n  } from '@shopify/polaris-icons';\n//news blog mail magazine sale\n//sort\nexport default function News(){\n    type newsType={\n        start:number,\n        end:number,\n        title:string,\n        id:string,\n        show:boolean,\n    };\n    const news:newsType[]=[\n        {\n            start: 20210101,\n            end: 20200107,\n            title:'Sample title',\n            id:'1',\n            show:true,\n        },\n        \n    ];\n        const resourceName = {\n            singular: 'article',\n            plural: 'artciles',\n        };\n    \n        const {\n        selectedResources,\n        allResourcesSelected,\n        handleSelectionChange,\n        } = useIndexResourceState(news);\n    \n        const rowMarkupII = news.map(\n            ({id, title,start,end, show}, index) => (\n                <IndexTable.Row\n                    id={id}\n                    key={id}\n                    selected={selectedResources.includes(id)}\n                    position={index}\n                >\n                    <IndexTable.Cell>\n                        <TextStyle variation=\"strong\" >{title}</TextStyle>\n                        </IndexTable.Cell>\n                    <IndexTable.Cell>{start} - {end}</IndexTable.Cell>\n                    <IndexTable.Cell>{show?'show':'hide'}</IndexTable.Cell>\n                </IndexTable.Row>\n            ),\n            );\n    \n        return (\n            <>\n            \n            <Layout.Section >\n            <Card primaryFooterAction={{icon:MobilePlusMajor}}>\n            <Card.Header\n                    title=\"News\"\n                    actions={[\n                        {\n                            content: 'action',\n                            url: '/'\n                        },\n                        {\n                            content:'action2',\n                            url:'/'\n                        }\n                    ]}\n                >\n                </Card.Header>\n                <Card.Section >\n                <IndexTable\n                    resourceName={resourceName}\n                    itemCount={news.length}\n                    selectedItemsCount={\n                        allResourcesSelected ? 'All' : selectedResources.length\n                    }\n                    onSelectionChange={handleSelectionChange}\n                    headings={[\n                        {title: 'Title'},\n                        {title: 'Date'},\n                        {title: 'Show'},\n                    ]}\n                >\n                    {rowMarkupII}\n                </IndexTable>\n                </Card.Section>\n            </Card>\n            <Card>\n                <Card.Section title=\"Create\">\n                    <TextField\n                        label=\"title\"\n                        onChange={()=>{}}\n                    />\n                    <TextField\n                        label=\"article\"\n                        onChange={()=>{}}\n                        multiline={3}\n                    />\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n        </>\n        );\n}","import { Card, Layout,TextStyle,ResourceList,ResourceListSelectedItems,ResourceItem} from \"@shopify/polaris\";\nimport { useState } from \"react\";\n//news blog mail magazine sale\n//sort　クリック数とか　売上数　絞り込み昨日\nexport default function Salse() {\n    const [selectedItems, setSelectedItems] = useState<ResourceListSelectedItems>([]);\n\n    \n\n    return (\n        <Layout.Section>\n    <Card>\n        <ResourceList\n            resourceName={{singular: 'blog post', plural: 'blog posts'}}\n            items={[\n                {\n                    id: '6',\n                    url: 'posts/6',\n                    title: 'How To Get Value From Wireframes',\n                    author: 'Jonathan Mangrove',\n                },\n            ]}\n                selectedItems={selectedItems}\n                onSelectionChange={setSelectedItems}\n                selectable\n                renderItem={(item) => {\n                const {id, url, title, author} = item;\n                const authorMarkup = author ? <div>by {author}</div> : null;\n                return (\n                    <ResourceItem\n                    id={id}\n                    url={url}\n                    accessibilityLabel={`View details for ${title}`}\n                    name={title}\n                    >\n                    <h3>\n                        <TextStyle variation=\"strong\">{title}</TextStyle>\n                    </h3>\n                    {authorMarkup}\n                    </ResourceItem>\n                );\n            }}\n        />\n    </Card>\n    </Layout.Section>\n    );\n}","import { Autocomplete, Card, Tag,TextContainer,Stack, } from \"@shopify/polaris\";\nimport { useCallback, useState } from \"react\";\n\nexport default function AddProductCategories() {\n    type shipment={\n        value:string,\n        label:string,\n    };\n    const deselectedOptions = [\n        {value: 'rustic', label: 'Rustic'},\n        {value: 'antique', label: 'Antique'},\n        {value: 'vinyl', label: 'Vinyl'},\n        {value: 'vintage', label: 'Vintage'},\n        {value: 'refurbished', label: 'Refurbished'},\n    ];\n\n    const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n    const [inputValue, setInputValue] = useState('');\n    const [options, setOptions] = useState<shipment[]>(deselectedOptions);\n    const updateText = useCallback (\n        (value) => {\n            setInputValue(value);\n        if (value === '') {\n            setOptions(deselectedOptions);\n            return;\n        }\n        const filterRegex = new RegExp(value, 'i');\n        const resultOptions = deselectedOptions.filter((option) =>\n            option.label.match(filterRegex),\n        );\n        let endIndex:number = resultOptions.length - 1;\n        if (resultOptions.length === 0) {\n            endIndex = 0;\n        }\n        setOptions(resultOptions);\n        },\n    [deselectedOptions],\n    );\n    const removeTag = useCallback(\n        (tag) => () => {\n            const options = [...selectedOptions];\n            options.splice(options.indexOf(tag), 1);\n            setSelectedOptions(options);\n        },\n        [selectedOptions],\n    );\n\n    const tagsMarkup = selectedOptions.map((option) => {\n        let tagLabel = '';\n        tagLabel = option.replace('_', ' ');\n        tagLabel = titleCase(tagLabel);\n        return (\n            <Tag key={`option${option}`} onRemove={removeTag(option)}>\n            {tagLabel}\n            </Tag>\n        );\n    });\n\n    const textField = (\n        <Autocomplete.TextField\n            onChange={updateText}\n            label=\"\"\n            value={inputValue}\n            placeholder=\"Vintage, cotton, summer\"\n        />\n    );\n\n    return (\n        <Card.Section title=\"Categories\">\n            <Autocomplete\n                allowMultiple\n                options={options}\n                selected={selectedOptions}\n                textField={textField}\n                onSelect={setSelectedOptions}\n                listTitle=\"Suggested Tags\"\n            />\n            <br />\n            <TextContainer>\n                <Stack>{tagsMarkup}</Stack>\n            </TextContainer>\n        </Card.Section>\n    );\n\n    function titleCase(string:string) {\n        return string\n        .toLowerCase()\n        .split(' ')\n        .map((word) => word.replace(word[0], word[0].toUpperCase()))\n        .join('');\n    }\n}","import { DropZone,FormLayout,Layout,Card,Form, TextField, ChoiceList, } from \"@shopify/polaris\";\nimport { ViewMinor,SaveMinor,DeleteMinor } from '@shopify/polaris-icons';\nimport AddProductsCategories from './AddProductsCategories'\n//商品の売れ行き状況\nexport default function AddProducts(){\n    \n    return(\n        <>\n        <Layout.Section>\n            <Form onSubmit={()=>{}}><FormLayout>\n                <Card title=\"Create Products\" primaryFooterAction={{content:'ADD'}} secondaryFooterActions={[{content:'Save',icon:SaveMinor},{content:'preview',icon:ViewMinor},{content:'Delete',destructive: true,icon:DeleteMinor}]}>\n                    <Card.Section title=\"info\">\n                        <TextField\n                            value=\"\"\n                            label=\"商品名\"\n                            placeholder=\"商品名\"\n                            maxLength={20}\n                            showCharacterCount\n                            onChange={()=>{}}\n                        />\n                        <TextField\n                            value=\"\"\n                            label=\"商品の説明\"\n                            placeholder=\"商品の説明\"\n                            maxLength={300}\n                            showCharacterCount\n                            onChange={()=>{}}\n                            multiline={3}\n                            helpText=\"説明文を書くときの注意！説明文を書くときの注意！説明文を書くときの注意！説明文を書くときの注意！\"\n                        />\n                    </Card.Section>\n                    <Card.Section title=\"Image\">\n                        <DropZone label=\"Image files\">\n                            <DropZone.FileUpload />\n                        </DropZone>\n                    </Card.Section>\n                    <Card.Section>\n                    <FormLayout>\n                    <FormLayout.Group>\n                        <TextField\n                            type=\"number\"\n                            value=\"11\"\n                            label=\"価格\"\n                            max={30}\n                            onChange={()=>{}}\n                            prefix=\"¥\"\n                        />\n                        <TextField\n                            type=\"number\"\n                            value=\"11\"\n                            label=\"在庫数\"\n                            max={30}\n                            onChange={()=>{}}\n                            align=\"right\"\n                        />\n                            \n                            \n                            </FormLayout.Group>\n                        </FormLayout>\n                    </Card.Section>\n                    <AddProductsCategories />\n                    {/**いらないかも */}\n                    \n                    <Card.Section title=\"Wrapping size\">\n                        <FormLayout>\n                            <FormLayout.Group>\n                                <ChoiceList\n                                title=\"巾着\"\n                                choices={[\n                                    {label:'SS',value:'ss'},\n                                    {label:'S',value:'s'},\n                                    {label:'M',value:'m'},\n                                    {label:'L',value:'l'},\n                                ]}\n                                selected={['ss']}\n                                />\n                            \n                                <ChoiceList\n                                    title=\"BOX\"\n                                    choices={[\n                                        {label:'SS',value:'ss'},\n                                        {label:'S',value:'s'},\n                                        {label:'M',value:'m'},\n                                        {label:'L',value:'l'},\n                                    ]}\n                                    selected={['s']}\n                                />\n                            </FormLayout.Group>\n                        </FormLayout>\n                    </Card.Section>\n                </Card>\n            </FormLayout></Form>\n        </Layout.Section>\n        </>\n    );\n}","import { Layout, Card, FormLayout, TextField, Stack, RadioButton, Button, TextStyle } from \"@shopify/polaris\";\nimport { useState, useCallback, VFC } from \"react\";\n\ntype ShipmentSettingsProps={\n    ShipmentCompany:string;\n};\nconst ShipmentSettings:VFC<ShipmentSettingsProps>=(props)=>{\n    const [value, setValue] = useState('disabled');\n    const [SomeArea,setSomeArea]=useState<boolean>(true);\n    const [Honshu,setHonshu]=useState<boolean>(false);\n    const handleChange = useCallback(\n        (_checked, newValue) => {\n            setValue(newValue);\n            setSomeArea((SomeArea)=>!SomeArea);\n            setHonshu((Honshu)=>!Honshu);\n        },[],\n    );\n    return(\n        <Layout.Section secondary>\n                <Card title={props.ShipmentCompany}>\n                <Card.Section>\n                    <Stack vertical>\n                        <FormLayout>\n                            <RadioButton\n                                label=\"全国一律\"\n                                helpText=\"北海道・本州・四国・九州・沖縄・離島\"\n                                checked={value === 'disabled'}\n                                id=\"disabled\"\n                                name=\"accounts\"\n                                onChange={handleChange}\n                            />\n                            <TextField disabled={Honshu} type=\"number\" label=\"価格\" onChange={()=>{}}　prefix=\"¥\"></TextField>\n                        </FormLayout>\n                        <FormLayout>\n                            <RadioButton\n                                label=\"離島・一部地域別\"\n                                helpText=\"離島を含む一部地域\u001d：北海道・沖縄・離島\"\n                                id=\"optional\"\n                                name=\"accounts\"\n                                checked={value === 'optional'}\n                                onChange={handleChange}\n                            />\n                            <TextField disabled={SomeArea} type=\"number\" label=\"本州・四国・九州\" onChange={()=>{}}　prefix=\"¥\"></TextField>\n                            <TextField disabled={SomeArea} type=\"number\" label=\"離島・一部地域\" onChange={()=>{}}　prefix=\"¥\"></TextField>\n                        </FormLayout>\n                    </Stack>\n                </Card.Section>\n                <Card.Section>\n                    <Stack>\n                        <Stack.Item fill><TextStyle variation=\"subdued\">N件</TextStyle></Stack.Item>\n                        <Stack.Item>\n                            <Button primary>商品の追加</Button>\n                        </Stack.Item>\n                    </Stack>\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n    );\n}\nexport default ShipmentSettings;","import { Button, Card, Layout,ResourceItem,ResourceList,Stack,TextStyle} from \"@shopify/polaris\";\n//対象商品\nimport {  EditMinor,ResetMinor } from '@shopify/polaris-icons';\nimport ShipmentSettingsVFC from \"./ShipmentSettingsVFC\";\nexport default function Shipment(){\n    type categoryitem={\n        id:string,\n        name:string,\n        num:number,\n    };\n    const categoriesItem=[\n        {\n            id:'1',\n            name:'シロネコヤマト',\n            num:1,\n        },\n        {\n            id:'2',\n            name:'佑川急便',\n            num:5,\n        },\n        {\n            id:'3',\n            name:'Uパック',\n            num:2,\n            \n        },\n        {\n            id:'4',\n            name:'メール郵便',\n            num:2,\n        },\n    ];\n\n    return(\n        <>\n            <Layout.Section>\n                <Card title=\"Shipment\"  primaryFooterAction={{content:'Save'}} >\n                    <Card.Section>\n                        <ResourceList\n                            items={categoriesItem}\n                            renderItem={renderItem}\n                            //selectedItems={}\n                            />\n                        \n                    </Card.Section>\n                </Card>\n            </Layout.Section>\n            <ShipmentSettingsVFC ShipmentCompany=\"\" />\n        </>\n    );\n    function renderItem(item:categoryitem){\n        const {id,name}=item;\n        return(\n            <>\n            <ResourceItem\n                id={id}\n                name={name}\n                onClick={()=>{}}\n            >\n                <Stack>\n                    <Stack.Item fill>\n                        <TextStyle variation=\"strong\">{name}</TextStyle>\n                    </Stack.Item>\n                    <TextStyle variation=\"subdued\">全国一律　離島・一部地域設定</TextStyle>\n                    <Stack.Item>\n                        <Button icon={EditMinor} primary onClick={()=>{}}></Button>\n                    </Stack.Item>\n                    <Stack.Item>\n                        <Button icon={ ResetMinor} monochrome outline onClick={()=>{}}></Button>\n                    </Stack.Item>\n                </Stack>\n            </ResourceItem>\n            </>\n        )\n    }\n}","import { Card, DatePicker, FormLayout, Layout, TextField, TextStyle } from \"@shopify/polaris\";\nimport { useCallback, useState } from \"react\";\n\nexport default function OrderSort(){\n    const [{month, year}, setDate] = useState({month: 1, year: 2018});\n    const [selectedDates, setSelectedDates] = useState({\n    start: new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n    end: new Date('Mon Feb 12 2018 00:00:00 GMT-0500 (EST)'),\n    });\n\n    const handleMonthChange = useCallback(\n        (month, year) => setDate({month, year}),\n        [],\n    );\n    return(<>\n        <Layout.Section secondary>\n            <Card title=\"絞り込み\" primaryFooterAction={{content:'Sort'}}>\n                <Card.Section title=\"期間\">\n                    <DatePicker\n                        month={month}\n                        year={year}\n                        onChange={setSelectedDates}\n                        onMonthChange={handleMonthChange}\n                        selected={selectedDates}\n                        //multiMonth //2ヶ月分\n                        allowRange\n                    />\n                </Card.Section>\n                <Card.Section title=\"売上\">\n                    <FormLayout>\n                        <FormLayout.Group condensed>\n                            <TextField type='number' label=\"Min\" onChange={()=>{}}></TextField>\n                            <TextField type='number' label=\"Max\" onChange={()=>{}}></TextField>\n                        </FormLayout.Group>\n                    </FormLayout>\n                </Card.Section>\n                \n            </Card>\n        </Layout.Section>\n\n    </>);\n}","import { Card,DataTable, Layout, } from \"@shopify/polaris\";\nimport OrderSort from \"./OrderSort\";\n//Saleの売り上げ　にんきしょうひん、金額 クーポン利用など\nexport default function Orders(){\n\n    const status:string[] = ['新規受付','発送準備','発送中','発送済み','キャンセル'];\n    const numberOfSales:number[]=[12,2,24,189];\n    const quantity:number[]=[140,140,140,140];\n    const test:number=233\n    const profit:number[]=[test,1234,12334,112345];\n    \n    const rows = \n        [\n            [status[0], numberOfSales[0], quantity[0], 30,'¥'+profit[0] ],\n            [status[1], numberOfSales[1], quantity[1], 20,'¥'+profit[1]],\n            [status[2], numberOfSales[2], quantity[2], 30,'¥'+ profit[2]],\n            [status[3], numberOfSales[3], quantity[3], 60,'¥'+profit[3] ]\n        ];\n\n        return (<>\n            <Layout.Section>\n                <Card>\n                    <DataTable\n                        columnContentTypes={[\n                        'text', //テキスト\n                        'numeric',  //数値\n                        'numeric','numeric','numeric',\n                        ]}\n                        headings={[\n                            '状況','件数','個数','客数','売上',\n                        ]}\n                        rows={rows}\n                        totals={['', 200,  560,200, '¥'+profit.reduce(function(a,b){return a+b})]}\n                        showTotalsInFooter\n                    />\n                </Card>\n            </Layout.Section>\n            <OrderSort />\n\n        </>);\n}","import { Avatar, Badge, Card, Layout, ResourceItem, ResourceList, ResourceListSelectedItems, Stack, TextStyle } from \"@shopify/polaris\";\nimport { useState } from \"react\";\n\nexport default function Customers(){\n    type Items={\n        id:string,\n        name:string,\n        url:string,\n        location:string,\n    };\n    const [selectedItems, setSelectedItems] = useState<ResourceListSelectedItems>([]);\n\n    const resourceName = {\n        singular: 'customer',\n        plural: 'customers',\n    };\n\n    const items:Items[] = [\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n    ];\n\n    const promotedBulkActions = [\n        {\n        content: 'Edit customers',\n        onAction: () => console.log('Todo: implement bulk edit'),\n        },\n    ];\n\n    const bulkActions = [\n        {\n        content: 'Add tags',\n        onAction: () => console.log('Todo: implement bulk add tags'),\n        },\n        {\n        content: 'Remove tags',\n        onAction: () => console.log('Todo: implement bulk remove tags'),\n        },\n        {\n        content: 'Delete customers',\n        onAction: () => console.log('Todo: implement bulk delete'),\n        },\n    ];\n\n    return (\n        <>\n        <Layout.Section>\n            <Card>\n                <Card.Header\n                    actions={[\n                        {\n                        //content: 'Total Sales',\n                        },\n                    ]}\n                    title=\"Accounts\"\n                />\n                <ResourceList\n                    resourceName={resourceName}\n                    items={items}\n                    renderItem={renderItem}\n                    selectedItems={selectedItems}\n                    onSelectionChange={setSelectedItems}\n                    promotedBulkActions={promotedBulkActions}\n                    bulkActions={bulkActions}\n                />\n            </Card>\n        </Layout.Section>\n        <Layout.Section secondary>\n            <Card primaryFooterAction={{content:'Sort'}} title=\"Sort\">\n                <Card.Section title=\"Name\">\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n        </>\n    );\n\n    function renderItem(item:Items) {\n        const {id, url, name, location} = item;\n        const media = <Avatar customer size=\"medium\" name={name} />;\n\n        return (\n        <ResourceItem\n            id={id}\n            url={url}\n            media={media}\n            accessibilityLabel={`View details for ${name}`}\n        >\n            <h3>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n            </h3>\n            <div>{location}</div>\n            <Stack>\n                <Stack.Item fill>\n                    <Badge status=\"attention\">注意</Badge>\n                </Stack.Item>\n                <Badge status=\"success\">成功</Badge>\n                <Badge status=\"critical\">クリティカル</Badge>\n                <Badge status=\"warning\">警告</Badge>\n                <Badge status=\"new\">DEFAULT</Badge>\n                <Badge status=\"info\">情報</Badge>\n                <Stack.Item><p>3456</p></Stack.Item>\n                <Stack.Item><p>¥123456</p></Stack.Item>\n\n            </Stack>\n            \n        </ResourceItem>\n        );\n        \n    }\n    \n}","import { Frame, Page,Layout,  Navigation,DisplayText } from \"@shopify/polaris\";\nimport {HomeMajor ,OrdersMajor,ProductsMajor,CustomersMajor, CategoriesMajor, FeaturedContentMajor,ShipmentMajor,SettingsMajor,StoreMajor} from \"@shopify/polaris-icons\";\nimport { useCallback, useState } from \"react\";\n/*\nimport Apple from './Apple';\nimport Lemon from './Lemon';\nimport Melon from './Melon';\n*/\nimport Peach from './Peach';\n\nimport ProductsMaster from \"./ProductsMaster\";\nimport Categories from \"./Categories\";\nimport Blogs from \"./Blogs\";\nimport News from './News';\nimport Sales from \"./Sales\";\nimport AddProducts from \"./AddProducts\";\nimport Shipment from \"./Shipment\";\nimport Orders from \"./Orders\";\nimport Customers from \"./Customers\";\n\n\nexport default function Navi(){\n    /*\n    const [NaviActive,setNaviActive]=useState(true);\n    const toggleNavi = useCallback(\n        ()=>setNaviActive((NaviActive) => !NaviActive)\n    ,[]);\n    */\n    const [flag,setFlag]=useState('Home');\n    const handleflag=useCallback (\n        (newflag)=>{setFlag(newflag);console.log(newflag)},[]\n    );\n    type pagetitle={\n        title:string,\n    };\n    const PageTitle: React.VFC<pagetitle>=(props)=>(\n        <Layout.Section>\n            <DisplayText size=\"large\">{props.title}</DisplayText>\n        </Layout.Section>\n    );\n    const NaviContents=(\n        <Navigation location=\"/\">\n            <Navigation.Section\n                items={[\n                    {\n                        url: '/',\n                        label: 'Home',\n                        icon: HomeMajor,\n                        onClick: ()=>handleflag('Home'),\n                    },\n                    \n                    {\n                        url: '/',\n                        label: 'Products',\n                        icon: ProductsMajor,\n                        badge:'1',\n                        onClick: ()=>handleflag('Products')\n                        /*subNavigationItems:[\n                            {\n                                url:'/',\n                                label:'profuct',\n                                //new:true,\n                            },\n                            {\n                                url:'/path',\n                                label:'profuct',\n                                \n                            }\n                        ]*/\n                    },\n                    {\n                        url:'/',\n                        label:'Categories',\n                        icon:  CategoriesMajor,\n                        onClick: ()=>handleflag('Categories')\n                    },\n                    {\n                        url: '/',\n                        label: 'Orders',\n                        icon: OrdersMajor,\n                        badge: '15',\n                        onClick: ()=>handleflag('Orders')\n                        \n                    },\n                    {\n                        url: '/',   //該当ページにいる場合は緑になる\n                        label: 'Customers',\n                        icon: CustomersMajor,\n                        badge: '15',\n                        onClick: ()=>handleflag('Customers')\n                    },\n                    {\n                        url: '/',\n                        label: 'Contents',\n                        icon:  FeaturedContentMajor,\n                        onClick:()=>handleflag('Contents'),\n                        \n                    },\n                    {\n                        url: '/',\n                        label: 'Shipment',\n                        icon:  ShipmentMajor,\n                        onClick: ()=>handleflag('Shipment'),\n                        \n                    },\n                    {\n                        url: '/',\n                        label: 'Settings',\n                        icon:  SettingsMajor,\n                        onClick: ()=>{handleflag('Setting')}\n                    },\n                ]}\n                rollup={{\n                    after:7,    //可視数\n                    view: 'view',\n                    hide: 'hide',\n                    activePath: '/',\n                }}\n            />\n            <Navigation.Section\n                title=\"Web Store\"\n                separator\n                items={[\n                    {\n                        url: '/Page2',\n                        label: 'Store',\n                        icon: StoreMajor\n                    }\n                ]}\n            />\n        </Navigation>\n    );\n    return(<>\n    <Page fullWidth>\n        <Frame\n            navigation={NaviContents}\n        >\n            <Layout >\n            <PageTitle title={flag}/>\n            \n                {flag==='Orders'&&<><Orders /></>}\n                {flag==='Home'&&<><Peach /></>}\n                {flag==='Customers'&&<><Customers /></>}\n                \n                {flag==='Categories'&&<><Categories /></>}\n                {flag==='Products'&&<><AddProducts /><ProductsMaster /></>}\n                {flag==='Contents'&&<><News /><Blogs /><Sales /></>}\n                {flag==='Shipment'&&<><Shipment /></>}\n                \n                \n            </Layout>\n        </Frame>\n    </Page>\n    </>);\n};\n/*\n\n\n                \n                \n                <Apple />\n                <Melon />\n                <Lemon />\n                <Peach />\n                \n\n*/","import jaTranslations from '@shopify/polaris/locales/ja.json'\nimport { AppProvider } from '@shopify/polaris';\nimport React from 'react';\n\nimport './App.css';\nimport Navi from './components/Navi';\n\nfunction App() {\n  return (\n    <AppProvider i18n={jaTranslations}>\n      <Navi />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@shopify/polaris/dist/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}