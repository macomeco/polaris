{"version":3,"sources":["components/Peach.tsx","components/Categories.tsx","components/Blogs.tsx","components/News.tsx","components/Sales.tsx","components/AddProductsCategories.tsx","components/AddProducts.tsx","components/ShipmentSettingsVFC.tsx","components/Shipment.tsx","components/OrderSort.tsx","components/OrderDetails.tsx","components/Orders.tsx","components/Customers.tsx","components/AllProducts.tsx","components/Navi.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Peach","useState","active","setActive","toggleBaner","useCallback","bannerMarkup","Layout","Section","fullWidth","Banner","title","status","action","content","onDismiss","TextContainer","Categories","categoriesItem","id","name","num","Card","ResourceList","items","renderItem","secondary","Form","onSubmit","FormLayout","Stack","Item","fill","TextField","label","value","onChange","placeholder","maxLength","showCharacterCount","Button","submit","primary","item","ResourceItem","onClick","TextStyle","variation","Badge","Contents","blogs","date","show","useIndexResourceState","selectedResources","allResourcesSelected","handleSelectionChange","rowMarkupII","map","index","IndexTable","Row","selected","includes","position","Cell","resourceName","singular","plural","itemCount","length","selectedItemsCount","onSelectionChange","headings","News","news","start","end","NewsCreate","setNewsCreate","NewsCreateToggleAdd","NewsCreateToggleCansel","todaystr","Date","toDateString","primaryFooterAction","icon","MobilePlusMajor","onAction","Header","actions","url","secondaryFooterActions","Group","multiline","Salse","selectedItems","setSelectedItems","author","selectable","authorMarkup","accessibilityLabel","AddProductCategories","deselectedOptions","selectedOptions","setSelectedOptions","inputValue","setInputValue","options","setOptions","updateText","filterRegex","RegExp","resultOptions","filter","option","match","removeTag","tag","splice","indexOf","tagsMarkup","tagLabel","replace","toLowerCase","split","word","toUpperCase","join","Tag","onRemove","textField","Autocomplete","allowMultiple","onSelect","listTitle","AddProducts","SaveMinor","ViewMinor","destructive","DeleteMinor","helpText","DropZone","FileUpload","type","max","prefix","align","ChoiceList","choices","ShipmentSettings","props","setValue","SomeArea","setSomeArea","Honshu","setHonshu","handleChange","_checked","newValue","ShipmentCompany","vertical","RadioButton","checked","disabled","Shipment","EditMinor","ResetMinor","monochrome","outline","alert","ShipmentSettingsVFC","OrderSort","month","year","setDate","selectedDates","setSelectedDates","handleMonthChange","DatePicker","onMonthChange","allowRange","condensed","OrderDetails","customers","location","orders","amountSpent","payment","taggedWith","setTaggedWith","queryValue","setQueryValue","sortValue","setSortValue","handleTaggedWithChange","handleTaggedWithRemove","handleQueryValueRemove","handleClearAll","handleSortChange","filters","key","labelHidden","shortcut","appliedFilters","Array","isArray","disambiguateLabel","rowMarkup","style","padding","display","flex","Filters","onQueryChange","onQueryClear","onClearAll","paddingLeft","Select","labelInline","Orders","numberOfSales","quantity","profit","rows","DataTable","columnContentTypes","totals","reduce","a","b","showTotalsInFooter","Customers","promotedBulkActions","console","log","bulkActions","media","Avatar","customer","size","AllProducts","stock","code","release","price","hasMoreItems","Navi","flag","setFlag","handleflag","newflag","PageTitle","DisplayText","NaviContents","Navigation","HomeMajor","ProductsMajor","badge","CategoriesMajor","OrdersMajor","CustomersMajor","FeaturedContentMajor","ShipmentMajor","SettingsMajor","rollup","after","view","hide","activePath","separator","StoreMajor","Page","Frame","navigation","App","AppProvider","i18n","jaTranslations","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3841dea.chunk.js","sourcesContent":["import { Banner, Layout, TextContainer } from \"@shopify/polaris\";\nimport { useCallback, useState } from \"react\";\n\nexport default function Peach(){\n    const [active,setActive]=useState(true);\n    const toggleBaner=useCallback(()=>setActive((active)=>!active),[]);\n    const bannerMarkup=active?(\n        <Layout.Section fullWidth>\n            <Banner\n                title=\"TITLE PEACH\"\n                status=\"success\"\n                action={{content: 'Print label'}}\n                onDismiss={toggleBaner}\n            >\n                <TextContainer> peach peach peach peach</TextContainer>\n            </Banner>\n        </Layout.Section>\n    ):null;\n    return(\n        <>\n        {bannerMarkup}\n        </>\n\n    );\n};","import { Badge, Card, FormLayout, Layout,  ResourceList, ResourceItem, TextField, TextStyle, Stack, Form, Button} from \"@shopify/polaris\";\n/*めも\nクリック\n編集モード\nソート\n商品一覧\n*/\nexport default function Categories(){\n    type categoryitem={\n        id:string,\n        name:string,\n        num:number,\n    };\n    const categoriesItem=[\n        {\n            id:'1',\n            name:'pink',\n            num:1,\n        },\n        {\n            id:'2',\n            name:'orange',\n            num:5,\n        },\n        {\n            id:'3',\n            name:'black',\n            num:2,\n            \n        },\n        {\n            id:'4',\n            name:'summer',\n            num:2,\n        },\n        {\n            id:'5',\n            name:'home',\n            num:5,\n        },\n    ];\n    \n    return(\n    <>\n        <Layout.Section >\n            <Card title=\"Categories\">\n                <Card.Section>\n                    <ResourceList\n                        items={categoriesItem}\n                        renderItem={renderItem}\n                        //selectedItems={}\n                        />\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n        <Layout.Section secondary>\n            <Card>\n                <Card.Section title=\"Category Add\">\n                    <Form onSubmit={()=>{}}>\n                        <FormLayout>\n                            <Stack>\n                                <Stack.Item fill>\n                                    <TextField\n                                        label=\"\"\n                                        value=\"sample\"\n                                        onChange={()=>{}}\n                                        placeholder=\"Category\"\n                                        maxLength={20}\n                                        showCharacterCount\n                                    />\n                                </Stack.Item>\n                                <Stack.Item>\n                                    <Button submit primary>ADD</Button>\n                                </Stack.Item>\n                            </Stack>\n                        </FormLayout>\n                    </Form>\n                </Card.Section>\n            </Card>\n            <Card>\n                <Card.Section title=\"Category search\">\n                    <FormLayout>\n                        <TextField\n                            label=\"\"\n                            value=\"sample\"\n                            onChange={()=>{}}\n                            placeholder=\"Category\"\n                            \n                        />\n                    </FormLayout>\n                </Card.Section>\n                <Card.Section>\n                    <ResourceList\n                        items={categoriesItem}\n                        renderItem={renderItem}\n                        //selectedItems={}\n                        />\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n    </>\n    );\n    function renderItem(item:categoryitem){\n        const {id,name,num}=item;\n        return(\n            <ResourceItem\n                id={id}\n                name={name}\n                onClick={()=>{}}\n            >\n                <Stack>\n                    <Stack.Item fill>\n                        <TextStyle variation=\"strong\">{name}</TextStyle>\n                    </Stack.Item>\n                    <Stack.Item>\n                        <Badge status=\"info\">{id}</Badge>\n                    </Stack.Item>\n                    <Stack.Item>\n                        {num}\n                    </Stack.Item>\n                </Stack>\n            </ResourceItem>\n        )\n    }\n};","import { Card, IndexTable, Layout,TextStyle,useIndexResourceState} from \"@shopify/polaris\";\n//news blog mail magazine sale\n//sort\nexport default function Contents(){\n    type blogType={\n        date:number,\n        title:string,\n        id:string,\n        show:boolean,\n    };\n    const blogs:blogType[]=[\n        {\n            date: 20210101,\n            title:'Sample title',\n            id:'1',\n            show:true,\n        },\n        {\n            date: 20210102,\n            title:'Sample title 2',\n            id: '2',\n            show:false,\n        },\n        {\n            date: 20210101,\n            title:'Sample title 3',\n            id:'3',\n            show:false,\n        },\n        {\n            date: 20210102,\n            title:'Sample title 4',\n            id: '4',\n            show:false,\n        },\n    ];\n        const resourceName = {\n            singular: 'article',\n            plural: 'artciles',\n        };\n    \n        const {\n        selectedResources,\n        allResourcesSelected,\n        handleSelectionChange,\n        } = useIndexResourceState(blogs);\n    \n        const rowMarkupII = blogs.map(\n            ({id, title,date, show}, index) => (\n                <IndexTable.Row\n                    id={id}\n                    key={id}\n                    selected={selectedResources.includes(id)}\n                    position={index}\n                >\n                    \n                    <IndexTable.Cell>\n                        <TextStyle variation=\"strong\">{title}</TextStyle>\n                        </IndexTable.Cell>\n                    <IndexTable.Cell>{date}</IndexTable.Cell>\n                    <IndexTable.Cell>{show?'show':'hide'}</IndexTable.Cell>\n                </IndexTable.Row>\n            ),\n            );\n    \n        return (\n            <Layout.Section>\n            <Card title=\"Blog\">\n                \n                <Card.Section >\n\n                <IndexTable\n                    resourceName={resourceName}\n                    itemCount={blogs.length}\n                    selectedItemsCount={\n                        allResourcesSelected ? 'All' : selectedResources.length\n                    }\n                    onSelectionChange={handleSelectionChange}\n                    headings={[\n                        {title: 'Title'},\n                        {title: 'Date'},\n                        {title: 'Show'},\n                    ]}\n                >\n                    {rowMarkupII}\n                </IndexTable>\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n        );\n}","import { Card, IndexTable, Layout,TextStyle,useIndexResourceState,TextField, FormLayout} from \"@shopify/polaris\";\nimport { MobilePlusMajor } from '@shopify/polaris-icons';\nimport { useCallback, useState } from \"react\";\n//news blog mail magazine sale\n//sort\nexport default function News(){\n    type newsType={\n        start:number,\n        end:number,\n        date:string,\n        title:string,\n        id:string,\n        show:boolean,\n    };\n    const news:newsType[]=[\n        {\n            start: 20210101,\n            end: 20200107,\n            date: 'Oct 15, 2015',\n            title:'Sample ',\n            id:'1',\n            show:true,\n        },\n        {\n            start: 20210101,\n            end: 20200107,\n            date: 'Oct 20, 2015',\n            title:'入荷しました',\n            id:'2',\n            show:true,\n        },\n        \n    ];\n    const resourceName = {\n        singular: 'article',\n        plural: 'artciles',\n    };\n    \n    const {\n    selectedResources,\n    allResourcesSelected,\n    handleSelectionChange,\n    } = useIndexResourceState(news);\n\n    const rowMarkupII = news.map(\n        ({id, title,date, show}, index) => (\n            <IndexTable.Row\n                id={id}\n                key={id}\n                selected={selectedResources.includes(id)}\n                position={index}\n            >\n                <IndexTable.Cell>\n                    <TextStyle variation=\"strong\" >{title}</TextStyle>\n                    </IndexTable.Cell>\n                <IndexTable.Cell>{date}</IndexTable.Cell>\n                <IndexTable.Cell>{show?'show':'hide'}</IndexTable.Cell>\n            </IndexTable.Row>\n        ),\n    );\n    const [NewsCreate, setNewsCreate]=useState(false);\n    const NewsCreateToggleAdd = useCallback(\n        ()=>{setNewsCreate((NewsCreate)=>true);}\n    ,[]);\n    const NewsCreateToggleCansel = useCallback(\n        ()=>{setNewsCreate((NewsCreate)=>false);}\n    ,[]);\n\n    const today = new Date();\n    const todaystr = today.toDateString();\n        return (\n            <>\n            <Layout.Section >\n            <Card primaryFooterAction={{icon:MobilePlusMajor,onAction:()=>{NewsCreateToggleAdd()}}}>\n            <Card.Header\n                    title=\"News\"\n                    actions={[\n                        {\n                            content: 'action',\n                            url: '/'\n                        },\n                        {\n                            content:'action2',\n                            url:'/'\n                        }\n                    ]}\n                >\n                </Card.Header>\n                <Card.Section >\n                <IndexTable\n                    resourceName={resourceName}\n                    itemCount={news.length}\n                    selectedItemsCount={\n                        allResourcesSelected ? 'All' : selectedResources.length\n                    }\n                    onSelectionChange={handleSelectionChange}\n                    headings={[\n                        {title: 'Title'},\n                        {title: 'Date'},\n                        {title: 'Show'},\n                    ]}\n                >\n                    {rowMarkupII}\n                </IndexTable>\n                </Card.Section>\n            </Card>\n            {NewsCreate===true &&\n            <Card title=\"Create News\"primaryFooterAction={{content:'Add'}}secondaryFooterActions={[{content:'Cansel',onAction:()=>{NewsCreateToggleCansel()}}]}>\n                <Card.Section >\n                    <FormLayout>\n                        <FormLayout.Group>\n                        <TextField\n                            label=\"title\"\n                            onChange={()=>{}}\n                        />\n                        <TextField\n                            label=\"date\"\n                            onChange={()=>{}}\n                            value={todaystr}\n                        />\n\n                        </FormLayout.Group>\n                        <TextField\n                            label=\"article\"\n                            onChange={()=>{}}\n                            multiline={3}\n                        />\n                    </FormLayout>\n                </Card.Section>\n            </Card>\n            }\n        </Layout.Section>\n        </>\n        );\n}","import { Card, Layout,TextStyle,ResourceList,ResourceListSelectedItems,ResourceItem} from \"@shopify/polaris\";\nimport { useState } from \"react\";\n//news blog mail magazine sale\n//sort　クリック数とか　売上数　絞り込み昨日\nexport default function Salse() {\n    const [selectedItems, setSelectedItems] = useState<ResourceListSelectedItems>([]);\n\n    \n\n    return (\n        <Layout.Section>\n    <Card>\n        <ResourceList\n            resourceName={{singular: 'blog post', plural: 'blog posts'}}\n            items={[\n                {\n                    id: '6',\n                    url: 'posts/6',\n                    title: 'How To Get Value From Wireframes',\n                    author: 'Jonathan Mangrove',\n                },\n            ]}\n                selectedItems={selectedItems}\n                onSelectionChange={setSelectedItems}\n                selectable\n                renderItem={(item) => {\n                const {id, url, title, author} = item;\n                const authorMarkup = author ? <div>by {author}</div> : null;\n                return (\n                    <ResourceItem\n                    id={id}\n                    url={url}\n                    accessibilityLabel={`View details for ${title}`}\n                    name={title}\n                    >\n                    <h3>\n                        <TextStyle variation=\"strong\">{title}</TextStyle>\n                    </h3>\n                    {authorMarkup}\n                    </ResourceItem>\n                );\n            }}\n        />\n    </Card>\n    </Layout.Section>\n    );\n}","import { Autocomplete, Card, Tag,TextContainer,Stack, } from \"@shopify/polaris\";\nimport { useCallback, useState } from \"react\";\n\nexport default function AddProductCategories() {\n    type shipment={\n        value:string,\n        label:string,\n    };\n    const deselectedOptions = [\n        {value: 'rustic', label: 'Rustic'},\n        {value: 'antique', label: 'Antique'},\n        {value: 'vinyl', label: 'Vinyl'},\n        {value: 'vintage', label: 'Vintage'},\n        {value: 'refurbished', label: 'Refurbished'},\n    ];\n\n    const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n    const [inputValue, setInputValue] = useState('');\n    const [options, setOptions] = useState<shipment[]>(deselectedOptions);\n    const updateText = useCallback (\n        (value) => {\n            setInputValue(value);\n        if (value === '') {\n            setOptions(deselectedOptions);\n            return;\n        }\n        const filterRegex = new RegExp(value, 'i');\n        const resultOptions = deselectedOptions.filter((option) =>\n            option.label.match(filterRegex),\n        );\n        let endIndex:number = resultOptions.length - 1;\n        if (resultOptions.length === 0) {\n            endIndex = 0;\n        }\n        setOptions(resultOptions);\n        },\n    [deselectedOptions],\n    );\n    const removeTag = useCallback(\n        (tag) => () => {\n            const options = [...selectedOptions];\n            options.splice(options.indexOf(tag), 1);\n            setSelectedOptions(options);\n        },\n        [selectedOptions],\n    );\n\n    const tagsMarkup = selectedOptions.map((option) => {\n        let tagLabel = '';\n        tagLabel = option.replace('_', ' ');\n        tagLabel = titleCase(tagLabel);\n        return (\n            <Tag key={`option${option}`} onRemove={removeTag(option)}>\n            {tagLabel}\n            </Tag>\n        );\n    });\n\n    const textField = (\n        <Autocomplete.TextField\n            onChange={updateText}\n            label=\"\"\n            value={inputValue}\n            placeholder=\"Vintage, cotton, summer\"\n        />\n    );\n\n    return (\n        <Card.Section title=\"Categories\">\n            <Autocomplete\n                allowMultiple\n                options={options}\n                selected={selectedOptions}\n                textField={textField}\n                onSelect={setSelectedOptions}\n                listTitle=\"Suggested Tags\"\n            />\n            <br />\n            <TextContainer>\n                <Stack>{tagsMarkup}</Stack>\n            </TextContainer>\n        </Card.Section>\n    );\n\n    function titleCase(string:string) {\n        return string\n        .toLowerCase()\n        .split(' ')\n        .map((word) => word.replace(word[0], word[0].toUpperCase()))\n        .join('');\n    }\n}","import { DropZone,FormLayout,Layout,Card,Form, TextField, ChoiceList, } from \"@shopify/polaris\";\nimport { ViewMinor,SaveMinor,DeleteMinor } from '@shopify/polaris-icons';\nimport AddProductsCategories from './AddProductsCategories'\n//商品の売れ行き状況\nexport default function AddProducts(){\n    \n    return(\n        <>\n        <Layout.Section>\n            <Form onSubmit={()=>{}}><FormLayout>\n                <Card title=\"Create Products\" primaryFooterAction={{content:'ADD'}} secondaryFooterActions={[{content:'Save',icon:SaveMinor},{content:'preview',icon:ViewMinor},{content:'Delete',destructive: true,icon:DeleteMinor}]}>\n                    <Card.Section title=\"info\">\n                        <TextField\n                            value=\"\"\n                            label=\"商品名\"\n                            placeholder=\"商品名\"\n                            maxLength={20}\n                            showCharacterCount\n                            onChange={()=>{}}\n                        />\n                        <TextField\n                            value=\"\"\n                            label=\"商品の説明\"\n                            placeholder=\"商品の説明\"\n                            maxLength={300}\n                            showCharacterCount\n                            onChange={()=>{}}\n                            multiline={3}\n                            helpText=\"説明文を書くときの注意！説明文を書くときの注意！説明文を書くときの注意！説明文を書くときの注意！\"\n                        />\n                    </Card.Section>\n                    <Card.Section title=\"Image\">\n                        <DropZone label=\"Image files\">\n                            <DropZone.FileUpload />\n                        </DropZone>\n                    </Card.Section>\n                    <Card.Section>\n                    <FormLayout>\n                    <FormLayout.Group>\n                        <TextField\n                            type=\"number\"\n                            value=\"11\"\n                            label=\"価格\"\n                            max={30}\n                            onChange={()=>{}}\n                            prefix=\"¥\"\n                        />\n                        <TextField\n                            type=\"number\"\n                            value=\"11\"\n                            label=\"在庫数\"\n                            max={30}\n                            onChange={()=>{}}\n                            align=\"right\"\n                        />\n                            \n                            \n                            </FormLayout.Group>\n                        </FormLayout>\n                    </Card.Section>\n                    <AddProductsCategories />\n                    {/**いらないかも */}\n                    \n                    <Card.Section title=\"Wrapping size\">\n                        <FormLayout>\n                            <FormLayout.Group>\n                                <ChoiceList\n                                title=\"巾着\"\n                                choices={[\n                                    {label:'SS',value:'ss'},\n                                    {label:'S',value:'s'},\n                                    {label:'M',value:'m'},\n                                    {label:'L',value:'l'},\n                                ]}\n                                selected={['ss']}\n                                />\n                            \n                                <ChoiceList\n                                    title=\"BOX\"\n                                    choices={[\n                                        {label:'SS',value:'ss'},\n                                        {label:'S',value:'s'},\n                                        {label:'M',value:'m'},\n                                        {label:'L',value:'l'},\n                                    ]}\n                                    selected={['s']}\n                                />\n                            </FormLayout.Group>\n                        </FormLayout>\n                    </Card.Section>\n                </Card>\n            </FormLayout>\n            </Form>\n            \n        </Layout.Section>\n        \n        </>\n    );\n}","import { Layout, Card, FormLayout, TextField, Stack, RadioButton, Button, TextStyle } from \"@shopify/polaris\";\nimport { useState, useCallback, VFC } from \"react\";\n\ntype ShipmentSettingsProps={\n    ShipmentCompany:string;\n};\nconst ShipmentSettings:VFC<ShipmentSettingsProps>=(props)=>{\n    const [value, setValue] = useState('disabled');\n    const [SomeArea,setSomeArea]=useState<boolean>(true);\n    const [Honshu,setHonshu]=useState<boolean>(false);\n    const handleChange = useCallback(\n        (_checked, newValue) => {\n            setValue(newValue);\n            setSomeArea((SomeArea)=>!SomeArea);\n            setHonshu((Honshu)=>!Honshu);\n        },[],\n    );\n    return(\n        <Layout.Section secondary>\n                <Card title={props.ShipmentCompany}>\n                <Card.Section>\n                    <Stack vertical>\n                        <FormLayout>\n                            <RadioButton\n                                label=\"全国一律\"\n                                helpText=\"北海道・本州・四国・九州・沖縄・離島\"\n                                checked={value === 'disabled'}\n                                id=\"disabled\"\n                                name=\"accounts\"\n                                onChange={handleChange}\n                            />\n                            <TextField disabled={Honshu} type=\"number\" label=\"価格\" onChange={()=>{}}　prefix=\"¥\"></TextField>\n                        </FormLayout>\n                        <FormLayout>\n                            <RadioButton\n                                label=\"離島・一部地域別\"\n                                helpText=\"離島を含む一部地域\u001d：北海道・沖縄・離島\"\n                                id=\"optional\"\n                                name=\"accounts\"\n                                checked={value === 'optional'}\n                                onChange={handleChange}\n                            />\n                            <TextField disabled={SomeArea} type=\"number\" label=\"本州・四国・九州\" onChange={()=>{}}　prefix=\"¥\"></TextField>\n                            <TextField disabled={SomeArea} type=\"number\" label=\"離島・一部地域\" onChange={()=>{}}　prefix=\"¥\"></TextField>\n                        </FormLayout>\n                    </Stack>\n                </Card.Section>\n                <Card.Section>\n                    <Stack>\n                        <Stack.Item fill><TextStyle variation=\"subdued\">N件</TextStyle></Stack.Item>\n                        <Stack.Item>\n                            <Button primary>商品の追加</Button>\n                        </Stack.Item>\n                    </Stack>\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n    );\n}\nexport default ShipmentSettings;","import { Button, Card, Layout,ResourceItem,ResourceList,Stack,TextStyle} from \"@shopify/polaris\";\n//対象商品\nimport {  EditMinor,ResetMinor } from '@shopify/polaris-icons';\nimport ShipmentSettingsVFC from \"./ShipmentSettingsVFC\";\nexport default function Shipment(){\n    type categoryitem={\n        id:string,\n        name:string,\n        num:number,\n    };\n    const categoriesItem=[\n        {\n            id:'1',\n            name:'シロネコヤマト',\n            num:1,\n        },\n        {\n            id:'2',\n            name:'佑川急便',\n            num:5,\n        },\n        {\n            id:'3',\n            name:'Uパック',\n            num:2,\n            \n        },\n        {\n            id:'4',\n            name:'メール郵便',\n            num:2,\n        },\n    ];\n\n    return(\n        <>\n            <Layout.Section>\n                <Card title=\"Shipment\"  primaryFooterAction={{content:'Save'}} >\n                    <Card.Section>\n                        <ResourceList\n                            items={categoriesItem}\n                            renderItem={renderItem}\n                            //selectedItems={}\n                            />\n                        \n                    </Card.Section>\n                </Card>\n            </Layout.Section>\n            <ShipmentSettingsVFC ShipmentCompany=\"\" />\n        </>\n    );\n    function renderItem(item:categoryitem){\n        const {id,name}=item;\n        return(\n            <>\n            <ResourceItem\n                id={id}\n                name={name}\n                onClick={()=>{}}\n            >\n                <Stack>\n                    <Stack.Item fill>\n                        <TextStyle variation=\"strong\">{name}</TextStyle>\n                    </Stack.Item>\n                    <TextStyle variation=\"subdued\">全国一律　離島・一部地域設定</TextStyle>\n                    <Stack.Item>\n                        <Button icon={EditMinor} primary onClick={()=>{}}></Button>\n                    </Stack.Item>\n                    <Stack.Item>\n                        <Button icon={ ResetMinor} monochrome outline onClick={()=>{alert('初期設定に戻しますか？')}}></Button>\n                    </Stack.Item>\n                </Stack>\n            </ResourceItem>\n            </>\n        )\n    }\n}","import { Card, DatePicker, FormLayout, Layout, TextField, } from \"@shopify/polaris\";\nimport { useCallback, useState } from \"react\";\n\nexport default function OrderSort(){\n    const [{month, year}, setDate] = useState({month: 1, year: 2018});\n    const [selectedDates, setSelectedDates] = useState({\n    start: new Date('Wed Feb 07 2018 00:00:00 GMT-0500 (EST)'),\n    end: new Date('Mon Feb 12 2018 00:00:00 GMT-0500 (EST)'),\n    });\n\n    const handleMonthChange = useCallback(\n        (month, year) => setDate({month, year}),\n        [],\n    );\n    return(<>\n        <Layout.Section secondary>\n            <Card title=\"絞り込み\" primaryFooterAction={{content:'Sort'}}>\n                <Card.Section title=\"期間\">\n                    <DatePicker\n                        month={month}\n                        year={year}\n                        onChange={setSelectedDates}\n                        onMonthChange={handleMonthChange}\n                        selected={selectedDates}\n                        //multiMonth //2ヶ月分\n                        allowRange\n                    />\n                </Card.Section>\n                <Card.Section title=\"売上\">\n                    <FormLayout>\n                        <FormLayout.Group condensed>\n                            <TextField type='number' label=\"Min\" onChange={()=>{}}></TextField>\n                            <TextField type='number' label=\"Max\" onChange={()=>{}}></TextField>\n                        </FormLayout.Group>\n                    </FormLayout>\n                </Card.Section>\n                \n            </Card>\n        </Layout.Section>\n\n    </>);\n}","import { useIndexResourceState, TextField, IndexTable, TextStyle, Card, Filters, Select, Layout, Badge } from \"@shopify/polaris\";\nimport { useState, useCallback } from \"react\";\n\nexport default function OrderDetails(){\n    \n    const customers = [\n    {\n        id: '3416',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        orders: 20,\n        amountSpent: '$2,400',\n        payment: 'succeess',\n    },\n    {\n        id: '2566',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        orders: 30,\n        amountSpent: '$140',\n    },\n    {\n        id: '3416',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        orders: 20,\n        amountSpent: '$2,400',\n        payment: 'succeess',\n    },\n    {\n        id: '3416',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        orders: 20,\n        amountSpent: '$2,400',\n        payment: '',\n    },\n    {\n        id: '3416',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        orders: 20,\n        amountSpent: '$2,400',\n        payment: '',\n    },\n    ];\n    const resourceName = {\n    singular: 'customer',\n    plural: 'customers',\n    };\n\n    const {\n    selectedResources,\n    allResourcesSelected,\n    handleSelectionChange,\n    } = useIndexResourceState(customers);\n    const [taggedWith, setTaggedWith] = useState<string>('VIP');\n    const [queryValue, setQueryValue] = useState<string>('');\n    const [sortValue, setSortValue] = useState<string>('today');\n\n    const handleTaggedWithChange = useCallback(\n    (value) => setTaggedWith(value),\n    [],\n    );\n    const handleTaggedWithRemove = useCallback(() => setTaggedWith(''), []);\n    const handleQueryValueRemove = useCallback(() => setQueryValue(''), []);\n    const handleClearAll = useCallback(() => {\n    handleTaggedWithRemove();\n    handleQueryValueRemove();\n    }, [handleQueryValueRemove, handleTaggedWithRemove]);\n    const handleSortChange = useCallback((value) => setSortValue(value), []);\n\n    const filters = [\n    {\n        key: 'taggedWith',\n        label: 'Tagged with',\n        filter: (\n        <TextField\n            label=\"Tagged with\"\n            value={taggedWith}\n            onChange={handleTaggedWithChange}\n            labelHidden\n        />\n        ),\n        shortcut: true,\n    },\n    ];\n\n    const appliedFilters = !isEmpty(taggedWith)\n    ? [\n        {\n            key: 'taggedWith',\n            label: disambiguateLabel('taggedWith', taggedWith),\n            onRemove: handleTaggedWithRemove,\n        },\n        ]\n    : [];\n\n    const sortOptions = [\n    {label: 'Today', value: 'today'},\n    {label: 'Yesterday', value: 'yesterday'},\n    {label: 'Last 7 days', value: 'lastWeek'},\n    ];\n\n    const rowMarkup = customers.map(\n    ({id, name, location, orders, amountSpent,payment}, index) => (\n        <IndexTable.Row\n        id={id}\n        key={id}\n        selected={selectedResources.includes(id)}\n        position={index}\n        >\n        <IndexTable.Cell>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n        </IndexTable.Cell>\n        <IndexTable.Cell>DIAMOND</IndexTable.Cell>\n        <IndexTable.Cell>{location}</IndexTable.Cell>\n        <IndexTable.Cell>{orders}</IndexTable.Cell>\n        <IndexTable.Cell>{amountSpent}</IndexTable.Cell>\n        <IndexTable.Cell>{payment ==='succeess'?<Badge status='success'>済</Badge>:<Badge status='attention'>未</Badge>}</IndexTable.Cell>\n        </IndexTable.Row>\n    ),\n    );\n\n    return (\n        \n    <Card>\n        <div style={{padding: '16px', display: 'flex'}}>\n        <div style={{flex: 1}}>\n            <Filters\n            queryValue={queryValue}\n            filters={filters}\n            appliedFilters={appliedFilters}\n            onQueryChange={setQueryValue}\n            onQueryClear={handleQueryValueRemove}\n            onClearAll={handleClearAll}\n            />\n        </div>\n        <div style={{paddingLeft: '0.4rem'}}>\n            <Select\n            labelInline\n            label=\"Sort by\"\n            options={sortOptions}\n            value={sortValue}\n            onChange={handleSortChange}\n            />\n        </div>\n        </div>\n        <IndexTable\n        resourceName={resourceName}\n        itemCount={customers.length}\n        selectedItemsCount={\n            allResourcesSelected ? 'All' : selectedResources.length\n        }\n        onSelectionChange={handleSelectionChange}\n        headings={[\n            {title: 'お名前'},\n            {title: '会員ランク'},\n            {title: '住所'},\n            {title: '個数'},\n            {title: '合計金額'},\n            {title:　'入金'},\n        ]}\n        >\n        {rowMarkup}\n        </IndexTable>\n    </Card>\n    \n    );\n    function disambiguateLabel(key:string, value:string) {\n    switch (key) {\n        case 'taggedWith':\n        return `Tagged with ${value}`;\n        default:\n        return value;\n    }\n    }\n    function isEmpty(value:string) {\n    if (Array.isArray(value)) {\n        return value.length === 0;\n    } else {\n        return value === '' || value == null;\n    }\n    \n    }\n\n}","import { Card,DataTable, Layout, } from \"@shopify/polaris\";\nimport OrderSort from \"./OrderSort\";\nimport OrderDetails from \"./OrderDetails\";\n//Saleの売り上げ　にんきしょうひん、金額 クーポン利用など\nexport default function Orders(){\n\n    const status:string[] = ['新規受付','発送準備','発送中','発送済み','キャンセル'];\n    const numberOfSales:number[]=[12,2,24,189];\n    const quantity:number[]=[140,140,140,140];\n    const test:number=233\n    const profit:number[]=[test,1234,12334,112345];\n    \n    const rows = \n        [\n            [status[0], numberOfSales[0], quantity[0], 30,'¥'+profit[0] ],\n            [status[1], numberOfSales[1], quantity[1], 20,'¥'+profit[1]],\n            [status[2], numberOfSales[2], quantity[2], 30,'¥'+ profit[2]],\n            [status[3], numberOfSales[3], quantity[3], 60,'¥'+profit[3] ]\n        ];\n\n        return (<>\n            <Layout.Section>\n                <Card>\n                    <DataTable\n                        columnContentTypes={[\n                        'text', //テキスト\n                        'numeric',  //数値\n                        'numeric','numeric','numeric',\n                        ]}\n                        headings={[\n                            '状況','件数','個数','客数','売上',\n                        ]}\n                        rows={rows}\n                        totals={['', 200,  560,200, '¥'+profit.reduce(function(a,b){return a+b})]}\n                        showTotalsInFooter\n                    />\n                </Card>\n                <OrderDetails />\n            </Layout.Section>\n            \n            \n            <OrderSort />\n            \n            \n\n        </>);\n}","import { Avatar, Badge, Card, Layout, ResourceItem, ResourceList, ResourceListSelectedItems, Stack, TextStyle,TextField, FormLayout } from \"@shopify/polaris\";\nimport { useState } from \"react\";\n\nexport default function Customers(){\n    type Items={\n        id:string,\n        name:string,\n        url:string,\n        location:string,\n    };\n    const [selectedItems, setSelectedItems] = useState<ResourceListSelectedItems>([]);\n\n    const resourceName = {\n        singular: 'customer',\n        plural: 'customers',\n    };\n\n    const items:Items[] = [\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n        {\n        id: '103',\n        url: 'customers/341',\n        name: 'Mae Jemison',\n        location: 'Decatur, USA',\n        },\n        {\n        id: '203',\n        url: 'customers/256',\n        name: 'Ellen Ochoa',\n        location: 'Los Angeles, USA',\n        },\n    ];\n\n    const promotedBulkActions = [\n        {\n        content: 'Edit customers',\n        onAction: () => console.log('Todo: implement bulk edit'),\n        },\n    ];\n\n    const bulkActions = [\n        {\n        content: 'Add tags',\n        onAction: () => console.log('Todo: implement bulk add tags'),\n        },\n        {\n        content: 'Remove tags',\n        onAction: () => console.log('Todo: implement bulk remove tags'),\n        },\n        {\n        content: 'Delete customers',\n        onAction: () => console.log('Todo: implement bulk delete'),\n        },\n    ];\n\n    return (\n        <>\n        <Layout.Section>\n            <Card>\n                <Card.Header\n                    actions={[\n                        {\n                        //content: 'Total Sales',\n                        },\n                    ]}\n                    title=\"Accounts\"\n                />\n                <ResourceList\n                    resourceName={resourceName}\n                    items={items}\n                    renderItem={renderItem}\n                    selectedItems={selectedItems}\n                    onSelectionChange={setSelectedItems}\n                    promotedBulkActions={promotedBulkActions}\n                    bulkActions={bulkActions}\n                />\n            </Card>\n        </Layout.Section>\n        <Layout.Section secondary>\n            <Card primaryFooterAction={{content:'Search'}} title=\"Search\">\n                <Card.Section title=\"\">\n                    <FormLayout>\n                        <TextField label=\"Name\" onChange={()=>{}}></TextField>\n                    </FormLayout>\n                </Card.Section>\n            </Card>\n        </Layout.Section>\n        </>\n    );\n\n    function renderItem(item:Items) {\n        const {id, url, name, location} = item;\n        const media = <Avatar customer size=\"medium\" name={name} />;\n\n        return (\n        <ResourceItem\n            id={id}\n            url={url}\n            media={media}\n            accessibilityLabel={`View details for ${name}`}\n        >\n            <h3>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n            </h3>\n            <div>{location}</div>\n            <Stack>\n                <Stack.Item fill>\n                    <Badge status=\"attention\">注意</Badge>\n                </Stack.Item>\n                <Badge status=\"success\">成功</Badge>\n                <Badge status=\"critical\">クリティカル</Badge>\n                <Badge status=\"warning\">警告</Badge>\n                <Badge status=\"new\">DEFAULT</Badge>\n                <Badge status=\"info\">情報</Badge>\n                <Stack.Item><p>3456</p></Stack.Item>\n                <Stack.Item><p>¥123456</p></Stack.Item>\n\n            </Stack>\n            \n        </ResourceItem>\n        );\n        \n    }\n    \n}","import { Layout, Card, Filters, IndexTable, Select, TextField, TextStyle, useIndexResourceState } from \"@shopify/polaris\";\nimport { useState, useCallback } from \"react\";\n\nexport default function AllProducts(){\n    const customers = [\n        {\n            id: '3417',\n            url: 'customers/341',\n            name: 'キャンバス',\n            orders: 20,\n            stock:30,\n            code:1234567890,\n            release:true,\n            price:2345,\n        },\n        {\n            id: '2567',\n            url: 'customers/256',\n            name: '水彩ペンセット(12色)',\n            orders: 30,\n            stock:30,\n            code:1234567890,\n            release:true,\n            price:2345,\n        },\n        {\n            id: '3417',\n            url: 'customers/341',\n            name: 'クロッキー帳',\n            orders: 20,\n            \n            stock:30,\n            code:1234567890,\n            release:true,\n            price:2345,\n            },\n            {\n            id: '2567',\n            url: 'customers/256',\n            name: 'ペンケース',\n            orders: 30,\n            stock:30,\n            code:1234567890,\n            release:false,\n            price:2345,\n        },\n        {\n            id: '3417',\n            url: 'customers/341',\n            name: 'パレット',\n            orders: 20,\n            \n            stock:30,\n            code:1234567890,\n            release:true,\n            price:2345,\n            },\n            {\n            id: '2567',\n            url: 'customers/256',\n            name: '練りゴム',\n            orders: 30,\n            stock:30,\n            code:1234567890,\n            release:true,\n            price:2345,\n        },\n    ];\n    const resourceName = {\n        singular: 'customer',\n        plural: 'customers',\n    };\n    \n    const {\n        selectedResources,\n        allResourcesSelected,\n        handleSelectionChange,\n    } = useIndexResourceState(customers);\n    const [taggedWith, setTaggedWith] = useState('VIP');\n    const [queryValue, setQueryValue] = useState<string>('');\n    const [sortValue, setSortValue] = useState('today');\n    \n    const handleTaggedWithChange = useCallback(\n        (value) => setTaggedWith(value),\n        [],\n    );\n    const handleTaggedWithRemove = useCallback(() => setTaggedWith(''), []);\n    const handleQueryValueRemove = useCallback(() => setQueryValue(''), []);\n    const handleClearAll = useCallback(() => {\n        handleTaggedWithRemove();\n        handleQueryValueRemove();\n    }, [handleQueryValueRemove, handleTaggedWithRemove]);\n    const handleSortChange = useCallback((value) => setSortValue(value), []);\n    \n    const promotedBulkActions = [\n        {\n        content: 'Edit customers',\n        onAction: () => console.log('Todo: implement bulk edit'),\n        },\n    ];\n    const bulkActions = [\n        {\n        content: 'Add tags',\n        onAction: () => console.log('Todo: implement bulk add tags'),\n        },\n        {\n        content: 'Remove tags',\n        onAction: () => console.log('Todo: implement bulk remove tags'),\n        },\n        {\n        content: 'Delete customers',\n        onAction: () => console.log('Todo: implement bulk delete'),\n        },\n    ];\n    \n    const filters = [\n        {\n        key: 'taggedWith',\n        label: 'Tagged with',\n        filter: (\n            <TextField\n            label=\"Tagged with\"\n            value={taggedWith}\n            onChange={handleTaggedWithChange}\n            labelHidden\n            />\n        ),\n        shortcut: true,\n        },\n    ];\n    \n    const appliedFilters = !isEmpty(taggedWith)\n        ? [\n            {\n            key: 'taggedWith',\n            label: disambiguateLabel('taggedWith', taggedWith),\n            onRemove: handleTaggedWithRemove,\n            },\n        ]\n        : [];\n    \n    const sortOptions = [\n        {label: 'Today', value: 'today'},\n        {label: 'Yesterday', value: 'yesterday'},\n        {label: 'Last 7 days', value: 'lastWeek'},\n    ];\n    \n    const rowMarkup = customers.map(\n        ({id, name,stock,code,release,price,orders}, index) => (\n        <IndexTable.Row\n            id={id}\n            key={id}\n            selected={selectedResources.includes(id)}\n            position={index}\n        >\n            <IndexTable.Cell>{id}</IndexTable.Cell>\n            <IndexTable.Cell>\n            <TextStyle variation=\"strong\">{name}</TextStyle>\n            </IndexTable.Cell>\n            <IndexTable.Cell>{code}</IndexTable.Cell>\n            <IndexTable.Cell>{stock}</IndexTable.Cell>\n            <IndexTable.Cell>\n                {release===true\n                ?<TextStyle variation=\"positive\">公開</TextStyle>\n                :<TextStyle variation=\"negative\">非公開</TextStyle>\n                }\n            </IndexTable.Cell>\n            <IndexTable.Cell>¥{price}</IndexTable.Cell>\n            <IndexTable.Cell>{orders}</IndexTable.Cell>\n        </IndexTable.Row>\n        ),\n    );\n    \n    return (\n        <Layout.Section>\n        <Card>\n        <div style={{padding: '16px', display: 'flex'}}>\n            <div style={{flex: 1}}>\n            <Filters\n                queryValue={queryValue}\n                filters={filters}\n                appliedFilters={appliedFilters}\n                onQueryChange={setQueryValue}\n                onQueryClear={handleQueryValueRemove}\n                onClearAll={handleClearAll}\n            />\n            </div>\n            <div style={{paddingLeft: '0.4rem'}}>\n            <Select\n                labelInline\n                label=\"Sort by\"\n                options={sortOptions}\n                value={sortValue}\n                onChange={handleSortChange}\n            />\n            </div>\n        </div>\n        <IndexTable\n            resourceName={resourceName}\n            itemCount={customers.length}\n            selectedItemsCount={\n            allResourcesSelected ? 'All' : selectedResources.length\n            }\n            onSelectionChange={handleSelectionChange}\n            hasMoreItems\n            bulkActions={bulkActions}\n            promotedBulkActions={promotedBulkActions}\n            headings={[\n            {title: 'id'},\n            {title: '商品名'},\n            {title: '商品コード'},\n            {title: '在庫'},\n            {title: '状態'},\n            {title: '販売価格'},\n            {title: '注文数'},\n            ]}\n        >\n            {rowMarkup}\n        </IndexTable>\n        </Card>\n        </Layout.Section>\n    );\n    \n    function disambiguateLabel(key:string, value:string) {\n        switch (key) {\n        case 'taggedWith':\n            return `Tagged with ${value}`;\n        default:\n            return value;\n        }\n    }\n    \n    function isEmpty(value:string) {\n        if (Array.isArray(value)) {\n        return value.length === 0;\n        } else {\n        return value === '' || value == null;\n        }\n    }\n}","import { Frame, Page,Layout,  Navigation,DisplayText } from \"@shopify/polaris\";\nimport {HomeMajor ,OrdersMajor,ProductsMajor,CustomersMajor, CategoriesMajor, FeaturedContentMajor,ShipmentMajor,SettingsMajor,StoreMajor} from \"@shopify/polaris-icons\";\nimport { useCallback, useState } from \"react\";\n/*\nimport Apple from './Apple';\nimport Lemon from './Lemon';\nimport Melon from './Melon';\n*/\nimport Peach from './Peach';\n\n//import ProductsMaster from \"./ProductsMaster\";\nimport Categories from \"./Categories\";\nimport Blogs from \"./Blogs\";\nimport News from './News';\nimport Sales from \"./Sales\";\nimport AddProducts from \"./AddProducts\";\nimport Shipment from \"./Shipment\";\nimport Orders from \"./Orders\";\nimport Customers from \"./Customers\";\nimport AllProducts from \"./AllProducts\";\n\n\nexport default function Navi(){\n    /*\n    const [NaviActive,setNaviActive]=useState(true);\n    const toggleNavi = useCallback(\n        ()=>setNaviActive((NaviActive) => !NaviActive)\n    ,[]);\n    */\n    const [flag,setFlag]=useState('Home');\n    const handleflag=useCallback (\n        (newflag)=>{setFlag(newflag);console.log(newflag); console.log(newflag)},[]\n    );\n    type pagetitle={\n        title:string,\n    };\n    const PageTitle: React.VFC<pagetitle>=(props)=>(\n        <Layout.Section>\n            <DisplayText size=\"large\">{props.title}</DisplayText>\n        </Layout.Section>\n    );\n    const NaviContents=(\n        <Navigation location=\"/\">\n            <Navigation.Section\n                items={[\n                    {\n                        url: '/',\n                        label: 'Home',\n                        icon: HomeMajor,\n                        onClick: ()=>handleflag('Home'),\n                    },\n                    \n                    {\n                        url: '/',\n                        label: 'All Products',\n                        icon: ProductsMajor,\n                        badge:'1',\n                        onClick: ()=>{handleflag('All Products');},\n                        /*\n                        subNavigationItems:[\n                            {\n                                \n                                onClick: ()=>{handleflag('Products');},\n                                url:'/',\n                                label:'All Products',\n                                //new:true,\n                            },\n                            {\n                                url:'/path',\n                                label:'Create prduct',\n                                onClick: ()=>handleflag('Create Product'),\n                            }\n                        ]\n                        */\n                    \n                    },\n                    {\n                        url:'/',\n                        label:'Create Product',\n                        icon:  ProductsMajor,\n                        onClick: ()=>handleflag('Create Products')\n                    },\n                    {\n                        url:'/',\n                        label:'Categories',\n                        icon:  CategoriesMajor,\n                        onClick: ()=>handleflag('Categories')\n                    },\n                    {\n                        url: '/',\n                        label: 'Orders',\n                        icon: OrdersMajor,\n                        badge: '15',\n                        onClick: ()=>handleflag('Orders')\n                        \n                    },\n                    {\n                        url: '/',   //該当ページにいる場合は緑になる\n                        label: 'Customers',\n                        icon: CustomersMajor,\n                        badge: '15',\n                        onClick: ()=>handleflag('Customers')\n                    },\n                    {\n                        url: '/',\n                        label: 'Contents',\n                        icon:  FeaturedContentMajor,\n                        onClick:()=>handleflag('Contents'),\n                        \n                    },\n                    {\n                        url: '/',\n                        label: 'Shipment',\n                        icon:  ShipmentMajor,\n                        onClick: ()=>handleflag('Shipment'),\n                        \n                    },\n                    {\n                        url: '/',\n                        label: 'Settings',\n                        icon:  SettingsMajor,\n                        onClick: ()=>{handleflag('Setting')}\n                    },\n                ]}\n                rollup={{\n                    after:7,    //可視数\n                    view: 'view',\n                    hide: 'hide',\n                    activePath: '/',\n                }}\n            />\n            <Navigation.Section\n                title=\"Web Store\"\n                separator\n                items={[\n                    {\n                        url: '/Page2',\n                        label: 'Store',\n                        icon: StoreMajor\n                    }\n                ]}\n            />\n        </Navigation>\n    );\n    return(<>\n    <Page fullWidth>\n        <Frame\n            navigation={NaviContents}\n        >\n            <Layout >\n            <PageTitle title={flag}/>\n            \n                {flag==='Orders'&&<><Orders /></>}\n                {flag==='Home'&&<><Peach /></>}\n                {flag==='Customers'&&<><Customers /></>}\n                \n                {flag==='Categories'&&<><Categories /></>}\n                {flag==='All Products'&&<><AllProducts /></>}\n                {flag==='Create Products'&&<><AddProducts /></>}\n\n                {flag==='Contents'&&<><News /><Blogs /><Sales /></>}\n                {flag==='Shipment'&&<><Shipment /></>}\n                \n                \n            </Layout>\n        </Frame>\n    </Page>\n    </>);\n};\n/*\n\n\n                \n                \n                <Apple />\n                <Melon />\n                <Lemon />\n                <Peach />\n                \n\n*/","import jaTranslations from '@shopify/polaris/locales/ja.json'\nimport { AppProvider } from '@shopify/polaris';\nimport React from 'react';\n\nimport './App.css';\nimport Navi from './components/Navi';\n\nfunction App() {\n  return (\n    <AppProvider i18n={jaTranslations}>\n      <Navi />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@shopify/polaris/dist/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}